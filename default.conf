# ************************************* REGINA CONFIGURATION **************************************
#                       .__
# _______   ____   ____ |__| ____ _____
# \_  __ \_/ __ \ / ___\|  |/    \\__  \
# |  | \/\  ___// /_/  >  |   |  \/ __ \_
# |__|    \___  >___  /|__|___|  (____  /
#             \/_____/         \/     \/
# ************************************************************************************************* 
# File format:
#   Assign value
#       key = value
#   Lists
#       key = el1, el2, el3
# - do not use quotation marks (unless your literally want one)
# - leading and trailing whitespaces will be ignored
# ******************************************* GENERAL *********************************************
# path to the database eg. /home/my_user/analytics/my_website.db
db =

# **************************************** DATA COLLECTION **************************************** 
# these changes will only apply to newly collected data/creation of new database
# ************************************************************************************************* 
# path to the nginx access log to parse. /var/log/nginx/access.log. Make sure you have write permissions!
access_log =

# nginx locations and their root directory: location:directory,location:directory,...
locs_and_dirs = /:/www/my_website,/error:/www/error
# filetypes that should be grouped (comma separated)
auto_group_filetypes = png,jpg,jpeg,gif,svg,css,ico,pdf,txt
# group certain files
filegroups = home:index.html,home.html;images:image1.png,image2.png
# filegroups = 

# wether a request with 30x http status counts as success
status_300_is_success = False
# if False, unique user is (ip-address - user agent) pair, if True only ip addess
unique_user_is_ip_address = False
# wether a user needs to make at least 1 successful request to be a human
human_needs_success = True

# dont collect requests to locations fully match this
request_location_regex_blacklist = /analytics.*

# list if capitalized ISO 3166-1 alpha-2 country codes for which the ip address ranges need to be collected at city level, not country level
# eg for EU: AT, BE, BG, HR, CY, CZ, DK, EE, FI, FR, DE, GZ, HU, IE, IT, LV, LT, LU, MT, NL, PL, PT, RO, SK, SI, ES, SE
get_cities_for_countries =  


# ***************************************** VISUALIZATION ***************************************** 
# these changes can be changed at any point in time as the only affect the visualization of the data
# ************************************************************************************************* 
# will be available as variable for the the generated website as %server_name
server_name = default_sever

# separate users into all and humans 
get_human_percentage = True

# generate a country and city ranking
do_geoip_rankings = False
# only use humans for geoip rankings
geoip_only_humans = True
city_ranking_regex_blacklist = City in .*
country_ranking_regex_blacklist =

# ignore the protocol in referers, so https://url.com = http://url.com -> url.com
referer_ranking_ignore_protocol = True
# ignore the subdomains in referers, so foo.url.com = bar.url.com -> url.com
referer_ranking_ignore_subdomain = False
# ignore the location in referers, so url.com/foo = url.com/bar -> url.com
referer_ranking_ignore_location = True
# regex expression as whitelist for referer ranking, minus means empty
# eg: exclude empty referers
referer_ranking_regex_whitelist = ^[^\-].*

# regex expression as whitelist for user agent ranking
user_agent_ranking_regex_whitelist = 

# regex expression as whitelist for file ranking
# eg .*\.((txt)|(html)|(css)|(php)|(png)|(jpeg)|(jpg)|(svg)|(gif)) to only show these files
file_ranking_regex_whitelist =
# maximum number of file(group)s on the file ranking
file_ranking_plot_max_files = 20
# wether to ignore non existing files in the ranking
file_ranking_ignore_error_files = True

plot_dpi = 300
# affects user/request count plot, file ranking and referer ranking
plot_size_broad = 10, 6
# affects platform and browser ranking
plot_size_narrow = 7, 5

# output directory for the generated plots
img_dir = /www/analytics/images
# nginx location for the generated images, its root must be img_dir
img_location = images
# template html input
template_html = /home/my_user/analytics/template.html
# output for the generated html
html_out_path = /www/analytics/statistics.html

# ******************************************** REGINA ********************************************* 
# these settings affect the behavior of regina
# ************************************************************************************************* 
# print lots! of debug messages to help you find problems
debug = False
