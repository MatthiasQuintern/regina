# ************************************* REGINA CONFIGURATION **************************************
#                       .__
# _______   ____   ____ |__| ____ _____
# \_  __ \_/ __ \ / ___\|  |/    \\__  \
# |  | \/\  ___// /_/  >  |   |  \/ __ \_
# |__|    \___  >___  /|__|___|  (____  /
#             \/_____/         \/     \/
# ************************************************************************************************* 
# File format:
#   Assign value
#       key = value
#   Lists
#       key = el1, el2, el3
#   Dictionaries:
#       key1: val1, key2: val2
#       key1: el1-1,el1-2; key2: el2-1, el2-2
# - do not use quotation marks (unless your literally want one)
# - leading and trailing whitespaces will be ignored
# ******************************************* GENERAL *********************************************
# path to the database 
# eg: /home/my_visitor/analytics/my_website.db
db =

# **************************************** DATA COLLECTION **************************************** 
# these changes will only apply to newly collected data/creation of new database
# ************************************************************************************************* 
# path to the nginx access log to parse. Make sure you have write permissions!
# eg: /var/log/nginx/access.log
access_log =

# FILE GROUPING
# nginx locations and their root directory: location:directory,location:directory,...
# eg: /:/www/my_website,/error:/www/error
locs_and_dirs = 
# filetypes that should be grouped (comma separated)
# eg: png,jpg,jpeg,gif,svg,css,ico,pdf,txt
auto_group_filetypes = 
# group certain files
# eg: home:index.html,home.html;images:image1.png,image2.png
filegroups = 

# HUMAN DETECTION
# wether a request with 30x http status counts as success
status_300_is_success = False
# if False, unique visitor is (ip-address - visitor agent) pair, if True only ip addess
unique_visitor_is_ip_address = False
# wether a visitor needs to make at least 1 successful request to be a human
human_needs_success = True

# dont collect requests to locations fully match this
# eg: /analytics.*
request_location_regex_blacklist =

# GEOIP
get_visitor_location = False
# this option is relevant used when --update-geoip is used
# list if capitalized ISO 3166-1 alpha-2 country codes for which the ip address ranges need to be collected at city level, not country level
# eg for EU: AT, BE, BG, HR, CY, CZ, DK, EE, FI, FR, DE, GZ, HU, IE, IT, LV, LT, LU, MT, NL, PL, PT, RO, SK, SI, ES, SE
get_cities_for_countries =  


# ***************************************** VISUALIZATION ***************************************** 
# these changes can be changed at any point in time as they only affect the visualization of the data
# ************************************************************************************************* 
# will be available as variable for the the generated website as %server_name
server_name = 

# separate visitors into all and humans 
get_human_percentage = True

# GEOIP
# generate a country and city ranking
do_geoip_rankings = False
# only use humans for geoip rankings
geoip_only_humans = True
# eg exclude unknown cities: City in .*
city_ranking_regex_blacklist = City in .*
country_ranking_regex_blacklist =

# ignore the protocol in referers, so https://url.com = http://url.com -> url.com
referer_ranking_ignore_protocol = True
# ignore the subdomains in referers, so foo.url.com = bar.url.com -> url.com
referer_ranking_ignore_subdomain = False
# ignore the location in referers, so url.com/foo = url.com/bar -> url.com
referer_ranking_ignore_location = True
# regex expression as whitelist for referer ranking, minus means empty
# eg exclude empty referers: ^[^\-].*
referer_ranking_regex_whitelist = ^[^\-].*

# regex expression as whitelist for visitor agent ranking
visitor_agent_ranking_regex_whitelist = 

# regex expression as whitelist for file ranking
# eg .*\.((txt)|(html)|(css)|(php)|(png)|(jpeg)|(jpg)|(svg)|(gif)) to only show these files
file_ranking_regex_whitelist =
# maximum number of file(group)s on the file ranking
file_ranking_plot_max_files = 20
# wether to ignore non existing files in the ranking
file_ranking_ignore_error_files = True

plot_dpi = 300
# affects visitor/request count plot, geoip rankings, file ranking and referer ranking
plot_size_broad = 14, 5
# affects platform and browser ranking
plot_size_narrow = 7, 5

# PATHS
# template html input
# eg: /home/my_visitor/.regina/template.html
template_html = 
# output for the generated html
# eg: /www/analytics/statistics.html
html_out_path = 

# output directory for the generated plots
# WARNING: you have to create the directory yourself, regina will not create it
# eg: /www/analytics/images
img_dir = 
# nginx location for the generated images, its root must be img_dir
# eg: images
img_location = 
#
# if the root for your server is /www/analytics and html_out_path is /www/analytics/analytics.html,
# use img_dir = /www/analytics/images and img_location = /images

# ******************************************** REGINA ********************************************* 
# these settings affect the behavior of regina
# ************************************************************************************************* 
# print lots! of debug messages to help you find problems
debug = False
