# ************************************* REGINA CONFIGURATION **************************************
#                           .__
#     _______   ____   ____ |__| ____ _____
#     \_  __ \_/ __ \ / ___\|  |/    \\__  \
#     |  | \/\  ___// /_/  >  |   |  \/ __ \_
#     |__|    \___  >___  /|__|___|  (____  /
#                 \/_____/         \/     \/
#     *************************************************************************************************

# Common Settings
[ regina ]
# name (not url) of the server or website
# will be avaiable as variable for the generated html as %server_name
# type: string
# server_name = my_website
server_name = 

# database path
# type: file (read, write permissions)
# database = /home/my_user/regina/my_website.db
database = 

# path to the nginx access log to parse
# type: file (read permissions)
# access_log = /var/log/nginx/access.log
access_log = 


# The template and generated file do actually have to be htmls, you can change it to whatever you want
[ html-generation ]
# type: True/False
generate_html = True

# template html input
# type: file (read permissions)
# template_html = /home/my_visitor/.regina/template.html
template_html = 

# output for the generated html
# type: file (write permissions)
# html_out_path = /www/analytics/statistics.html
html_out_path = 

# output directory for the generated plots
# type: directory (write permissions)
# img_out_dir = /www/analytics/images
img_out_dir = 

# nginx location for the generated images (this has to map to img_out_dir)
# type: eg: images
# img_location = /images
img_location = 


# These settings affect the data collection. If changed, they will affect how the database is being filled in the future.
[ data-collection ]
# whether a unique visitor is only identified by IP address
# type: True/False
unique_visitor_is_ip_address = 

# whether a visitor needs at least one successful request to be a human
# type: True/False
human_needs_success = True

# whether a request with 30x HTTP status counts as successful request
# type: True/False
status_300_is_success = True

# delete all ip addresses after the collection is done
# type: True/False
delete_ip_addresses = True

# don't collect requests to locations that match this regex
# type: regexp, None, int or string
# request_location_blacklist = /analytics.*
request_location_blacklist = 

# whether to get visitor location information
# type: True/False
get_visitor_location = 

# whether to generate country and city rankings using GeoIP (requires GeoIP Database)
# type: True/False
do_geoip_rankings = 

# countries for which the GeoIP needs to be resolved at city level
# type: list of capitalized ISO 3166-1 alpha-2 country codes
# get_cities_for_countries = AT, BE, BG, HR, CY, CZ, DK, EE, FI, FR, DE, GZ, HU, IE, IT, LV, LT, LU, MT, NL, PL, PT, RO, SK, SI, ES, SE
get_cities_for_countries = 

# whether to use only humans for GeoIP rankings (requires GeoIP Database)
# type: True/False
geoip_only_humans = True


[ rankings ]
# Explanation for blacklists and whitelists:
#     If a blacklist is given: values that fully match the blacklist are excluded
#     If a whitelist is given: values that do not fully match the whitelist are excluded
#     Both are optional: you can provide, none or both

# type: regexp or None
# city_ranking_blacklist = City in .*
city_ranking_blacklist = 

# type: regexp or None
city_ranking_whitelist = 

# type: regexp or None
country_ranking_blacklist = 

# type: regexp or None
country_ranking_whitelist = 

# type: regexp or None
# route_ranking_blacklist = .*\.((css)|(txt))
route_ranking_blacklist = 

# type: regexp or None
# route_ranking_whitelist = .*\.((php)|(html)|(php)|(png)|(jpeg)|(jpg)|(svg)|(gif))
route_ranking_whitelist = 

# maximum number of entries in route ranking
# type: int
route_ranking_plot_max_routes = 20

# whether to ignore non-existing routes in ranking
# type: True/False
route_ranking_ignore_404 = True

# type: regexp or None
# referer_ranking_blacklist = Example: exclude '-' (nginx sets this when there is no referer)
referer_ranking_blacklist = -

# type: regexp or None
referer_ranking_whitelist = 

# whether to ignore protocol in referer ranking (if True: https://domain.com == http://domain.com -> domain.com)
# type: True/False
referer_ranking_ignore_protocol = True

# whether to ignore subdomains inreferer ranking (if True: sub.domain.com == another.sub2.domain.com -> domain.com)
# type: True/False
referer_ranking_ignore_subdomain = 

# whether to ignore route in referer ranking (if True: domain.com/route1 == domain.com/route2 -> domain.com)
# type: True/False
referer_ranking_ignore_route = True


[ plots ]
# DPI for plots
# type: int
plot_dpi = 300

# plot size for broad plots: width, heigh
# type: int, int
plot_size_broad = 14, 5

# plot size for narrow plots: width, height
# type: int, int
plot_size_narrow = 7, 5

# *************************************************************************************************
#     https://git.quintern.xyz/MatthiasQuintern/regina
#     *************************************************************************************************